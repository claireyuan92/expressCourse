/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode partition(ListNode head, int x) {
	ListNode prehead = new ListNode(-1);
	prehead.next =head;
	ListNode smaller_partition = prehead;
	ListNode greater_partition = prehead;
	if (head == null || head.next == null) return head;
	while(smaller_partition.next!= null && smaller_partition.next.val < x) {
	    smaller_partition = smaller_partition.next;
	}
	if(smaller_partition.next == null) return prehead.next;
	else greater_partition = smaller_partition.next;
	
	while(greater_partition!= null && greater_partition.next!= null) {
	    // every time greater_partition find a val smaller than x, remove it from list
	    if (greater_partition.next.val < x ) {
		ListNode tmp = greater_partition.next;
		greater_partition.next = tmp.next;
		// and insert it after smaller_partition
		ListNode tmp2 = smaller_partition.next;
		smaller_partition.next = tmp2.next;
		smaller_partition = smaller_partition.next;
	    }
	    greater_partition = greater_partition.next;
	}
	
	return prehead.next;
	
    }
}
